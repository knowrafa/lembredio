package lembredio;

import java.awt.Color;
import java.awt.Component;
import java.awt.Dimension;
import java.awt.Font;
import static java.awt.Frame.MAXIMIZED_BOTH;
import java.awt.List;
import static java.awt.SystemColor.desktop;
import java.beans.PropertyVetoException;
import java.io.BufferedReader;
import java.io.File;
import java.io.FileInputStream;
import java.io.FileNotFoundException;
import java.io.FileWriter;
import java.io.IOException;
import java.io.InputStream;
import java.io.InputStreamReader;
import static java.lang.Thread.sleep;
import java.lang.reflect.Array;
import java.text.SimpleDateFormat;
import java.util.Calendar;
import java.util.Date;
import java.util.GregorianCalendar;
import java.util.LinkedList;
import java.util.Locale;
import java.util.logging.Level;
import java.util.logging.Logger;
import java.util.regex.Pattern;
import static javafx.scene.text.Font.font;
import static javafx.scene.text.Font.font;
import javax.sound.sampled.LineUnavailableException;
import javax.sound.sampled.UnsupportedAudioFileException;
import javax.swing.BorderFactory;
import javax.swing.JFormattedTextField;
import javax.swing.JFrame;
import javax.swing.JInternalFrame;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JScrollPane;
import javax.swing.JTextField;
import javax.swing.text.MaskFormatter;

/*
 * To change this license header, choose License Headers in Project Properties.
 * To change this template file, choose Tools | Templates
 * and open the template in the editor.
 */

/**
 *
 * @author elrafa
 */
public class PacienteInterface extends javax.swing.JInternalFrame {
    String nomeUser;
    int x, y, k;
    int horaAtualMinutos, menorDifAtual= 1441;   //Valores para manipulação do algoritmo magnífico de horas.
    boolean flag = true;
    Remédio remedio = new Remédio();
  
     /*
        Inicializa os componentes, define o nome utilizar na interface para manipulações,
    o nome escrito na janela inicial, deixa visível, inicializa as variáveis de controle
    da página de atualização, mostra os remédios que o usuário possui e inicializa o método
    para verificar se é hora do Lembrédio.
     */
     public PacienteInterface(String nome) throws FileNotFoundException, IOException, UnsupportedAudioFileException, LineUnavailableException, InterruptedException{
        
        initComponents();
        nomeUser = nome;
        jLabel2NP.setText(nome);
        setVisible(true);
        initXYK();
        updateRemedy(false);
        compareHour();
     }
     
    
   
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jTabbedPane1 = new javax.swing.JTabbedPane();
        jPanel1 = new javax.swing.JPanel();
        jLabel1 = new javax.swing.JLabel();
        jLabel2NP = new javax.swing.JLabel();
        jPanel2 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        nomeAlarme = new javax.swing.JLabel();
        jLabel4 = new javax.swing.JLabel();
        remainingTime = new javax.swing.JLabel();
        horaAtual = new javax.swing.JLabel();
        jPanel4 = new javax.swing.JPanel();
        scroll = new javax.swing.JScrollPane();
        jPanel6 = new javax.swing.JPanel();
        atualizarListaDeRemedios = new javax.swing.JButton();
        jPanel5 = new javax.swing.JPanel();
        scroll2 = new javax.swing.JScrollPane();
        jPanel3 = new javax.swing.JPanel();
        pesquisaText = new javax.swing.JTextField();
        okButtonSearch = new javax.swing.JButton();
        jLabel3 = new javax.swing.JLabel();
        cadastroRemedioInterface = new javax.swing.JPanel();
        jLabel14 = new javax.swing.JLabel();
        nomeRemedio1 = new javax.swing.JTextField();
        jLabel15 = new javax.swing.JLabel();
        jLabel16 = new javax.swing.JLabel();
        CheckDomingo1 = new javax.swing.JCheckBox();
        CheckSegunda1 = new javax.swing.JCheckBox();
        CheckTerça1 = new javax.swing.JCheckBox();
        CheckQuinta1 = new javax.swing.JCheckBox();
        CheckSexta1 = new javax.swing.JCheckBox();
        CheckSabado1 = new javax.swing.JCheckBox();
        CheckQuarta1 = new javax.swing.JCheckBox();
        CheckTDS1 = new javax.swing.JCheckBox();
        horarioRemedio1 = new javax.swing.JFormattedTextField();
        BotaoSalvar1 = new javax.swing.JButton();
        jLabel17 = new javax.swing.JLabel();
        jComboBox21 = new javax.swing.JComboBox<>();
        jMenuBar1 = new javax.swing.JMenuBar();
        arquivoMenu = new javax.swing.JMenu();
        logoutButton = new javax.swing.JMenuItem();
        jMenu1 = new javax.swing.JMenu();
        sobre = new javax.swing.JMenuItem();

        setMinimumSize(new java.awt.Dimension(665, 544));
        setPreferredSize(new java.awt.Dimension(665, 544));

        jLabel1.setText("Paciente :");

        jLabel2NP.setText("Nome Paciente");

        jLabel2.setText("Nome do remédio");

        nomeAlarme.setText("   ");

        jLabel4.setText("Tempo restante");

        remainingTime.setText("          ");

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(33, 33, 33)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                    .addComponent(jLabel4)
                    .addComponent(jLabel2))
                .addGap(39, 39, 39)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING, false)
                    .addComponent(nomeAlarme, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                    .addComponent(remainingTime, javax.swing.GroupLayout.DEFAULT_SIZE, 136, Short.MAX_VALUE))
                .addContainerGap(28, Short.MAX_VALUE))
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addGap(51, 51, 51)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel2)
                    .addComponent(nomeAlarme))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel4)
                    .addComponent(remainingTime))
                .addContainerGap(226, Short.MAX_VALUE))
        );

        horaAtual.setText("   ");

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jLabel1)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(0, 182, Short.MAX_VALUE))
                    .addGroup(jPanel1Layout.createSequentialGroup()
                        .addComponent(jLabel2NP)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                        .addComponent(horaAtual, javax.swing.GroupLayout.PREFERRED_SIZE, 131, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap())
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(19, 19, 19)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                        .addComponent(jLabel1)
                        .addComponent(jLabel2NP))
                    .addComponent(horaAtual, javax.swing.GroupLayout.PREFERRED_SIZE, 28, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(30, 30, 30)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(82, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Avisos", jPanel1);

        atualizarListaDeRemedios.setText("Atualizar");
        atualizarListaDeRemedios.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                atualizarListaDeRemediosActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel6Layout = new javax.swing.GroupLayout(jPanel6);
        jPanel6.setLayout(jPanel6Layout);
        jPanel6Layout.setHorizontalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, jPanel6Layout.createSequentialGroup()
                .addContainerGap(498, Short.MAX_VALUE)
                .addComponent(atualizarListaDeRemedios, javax.swing.GroupLayout.PREFERRED_SIZE, 125, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(21, 21, 21))
        );
        jPanel6Layout.setVerticalGroup(
            jPanel6Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel6Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(atualizarListaDeRemedios, javax.swing.GroupLayout.PREFERRED_SIZE, 46, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(422, Short.MAX_VALUE))
        );

        scroll.setViewportView(jPanel6);

        javax.swing.GroupLayout jPanel4Layout = new javax.swing.GroupLayout(jPanel4);
        jPanel4.setLayout(jPanel4Layout);
        jPanel4Layout.setHorizontalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scroll)
        );
        jPanel4Layout.setVerticalGroup(
            jPanel4Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scroll)
        );

        jTabbedPane1.addTab("Remedios Cadastrados", jPanel4);

        okButtonSearch.setText("Ok");
        okButtonSearch.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                okButtonSearchActionPerformed(evt);
            }
        });

        jLabel3.setText("Pesquisar");

        javax.swing.GroupLayout jPanel3Layout = new javax.swing.GroupLayout(jPanel3);
        jPanel3.setLayout(jPanel3Layout);
        jPanel3Layout.setHorizontalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addContainerGap(310, Short.MAX_VALUE)
                .addComponent(jLabel3)
                .addGap(18, 18, 18)
                .addComponent(pesquisaText, javax.swing.GroupLayout.PREFERRED_SIZE, 145, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(18, 18, 18)
                .addComponent(okButtonSearch)
                .addGap(54, 54, 54))
        );
        jPanel3Layout.setVerticalGroup(
            jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel3Layout.createSequentialGroup()
                .addGap(32, 32, 32)
                .addGroup(jPanel3Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(okButtonSearch)
                    .addComponent(pesquisaText, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(jLabel3))
                .addContainerGap(419, Short.MAX_VALUE))
        );

        scroll2.setViewportView(jPanel3);

        javax.swing.GroupLayout jPanel5Layout = new javax.swing.GroupLayout(jPanel5);
        jPanel5.setLayout(jPanel5Layout);
        jPanel5Layout.setHorizontalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scroll2, javax.swing.GroupLayout.Alignment.TRAILING)
        );
        jPanel5Layout.setVerticalGroup(
            jPanel5Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(scroll2, javax.swing.GroupLayout.Alignment.TRAILING)
        );

        jTabbedPane1.addTab("Pesquisar Remédios", jPanel5);

        cadastroRemedioInterface.setPreferredSize(new java.awt.Dimension(665, 544));

        jLabel14.setText(" Remédios :");

        jLabel15.setText("Horarios :");

        jLabel16.setText("Dias da Semana :");

        CheckDomingo1.setText("Domingo");

        CheckSegunda1.setText("Segunda - feira");

        CheckTerça1.setText("Terça - feira");

        CheckQuinta1.setText("Quinta - feira");

        CheckSexta1.setText("Sexta - feira");

        CheckSabado1.setText("Sábado");

        CheckQuarta1.setText("Quarta - feira");

        CheckTDS1.setText("Todos os dias da semana");

        try {
            horarioRemedio1.setFormatterFactory(new javax.swing.text.DefaultFormatterFactory(new javax.swing.text.MaskFormatter("##:##")));
        } catch (java.text.ParseException ex) {
            ex.printStackTrace();
        }
        horarioRemedio1.setToolTipText("");
        horarioRemedio1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                horarioRemedio1RemedioActionPerformed(evt);
            }
        });

        BotaoSalvar1.setText("Salvar");
        BotaoSalvar1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                BotaoSalvar1ActionPerformed(evt);
            }
        });

        jLabel17.setText("Intervalo:");

        jComboBox21.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "4 em 4 horas", "6 em 6 horas", "8 em 8 horas", "12 em 12 horas", "1 vez ao dia" }));

        javax.swing.GroupLayout cadastroRemedioInterfaceLayout = new javax.swing.GroupLayout(cadastroRemedioInterface);
        cadastroRemedioInterface.setLayout(cadastroRemedioInterfaceLayout);
        cadastroRemedioInterfaceLayout.setHorizontalGroup(
            cadastroRemedioInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cadastroRemedioInterfaceLayout.createSequentialGroup()
                .addGroup(cadastroRemedioInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addGroup(cadastroRemedioInterfaceLayout.createSequentialGroup()
                        .addGap(19, 19, 19)
                        .addGroup(cadastroRemedioInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING, false)
                            .addGroup(javax.swing.GroupLayout.Alignment.LEADING, cadastroRemedioInterfaceLayout.createSequentialGroup()
                                .addComponent(jLabel14)
                                .addGap(124, 124, 124)
                                .addComponent(nomeRemedio1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE))
                            .addGroup(cadastroRemedioInterfaceLayout.createSequentialGroup()
                                .addGroup(cadastroRemedioInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(jLabel15)
                                    .addComponent(jLabel17))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.RELATED, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                                .addGroup(cadastroRemedioInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                                    .addComponent(horarioRemedio1, javax.swing.GroupLayout.PREFERRED_SIZE, 255, javax.swing.GroupLayout.PREFERRED_SIZE)
                                    .addGroup(cadastroRemedioInterfaceLayout.createSequentialGroup()
                                        .addGap(36, 36, 36)
                                        .addComponent(jComboBox21, javax.swing.GroupLayout.PREFERRED_SIZE, 181, javax.swing.GroupLayout.PREFERRED_SIZE))))))
                    .addGroup(cadastroRemedioInterfaceLayout.createSequentialGroup()
                        .addContainerGap()
                        .addGroup(cadastroRemedioInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                            .addGroup(cadastroRemedioInterfaceLayout.createSequentialGroup()
                                .addGroup(cadastroRemedioInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.TRAILING)
                                    .addComponent(CheckDomingo1)
                                    .addComponent(jLabel16))
                                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                                .addComponent(CheckSegunda1)
                                .addGap(18, 18, 18)
                                .addComponent(CheckTerça1)
                                .addGap(18, 18, 18)
                                .addComponent(CheckQuarta1))
                            .addGroup(cadastroRemedioInterfaceLayout.createSequentialGroup()
                                .addGap(16, 16, 16)
                                .addComponent(CheckQuinta1)
                                .addGap(18, 18, 18)
                                .addComponent(CheckSexta1)
                                .addGap(18, 18, 18)
                                .addComponent(CheckSabado1)
                                .addGap(18, 18, 18)
                                .addComponent(CheckTDS1))))
                    .addGroup(cadastroRemedioInterfaceLayout.createSequentialGroup()
                        .addGap(433, 433, 433)
                        .addComponent(BotaoSalvar1)))
                .addContainerGap(66, Short.MAX_VALUE))
        );
        cadastroRemedioInterfaceLayout.setVerticalGroup(
            cadastroRemedioInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(cadastroRemedioInterfaceLayout.createSequentialGroup()
                .addGap(45, 45, 45)
                .addGroup(cadastroRemedioInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel14)
                    .addComponent(nomeRemedio1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(31, 31, 31)
                .addGroup(cadastroRemedioInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel15)
                    .addComponent(horarioRemedio1, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(44, 44, 44)
                .addGroup(cadastroRemedioInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jLabel17)
                    .addComponent(jComboBox21, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE))
                .addGap(69, 69, 69)
                .addComponent(jLabel16)
                .addGap(35, 35, 35)
                .addGroup(cadastroRemedioInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CheckDomingo1)
                    .addComponent(CheckSegunda1)
                    .addComponent(CheckTerça1)
                    .addComponent(CheckQuarta1))
                .addGap(18, 18, 18)
                .addGroup(cadastroRemedioInterfaceLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(CheckQuinta1)
                    .addComponent(CheckSexta1)
                    .addComponent(CheckSabado1)
                    .addComponent(CheckTDS1))
                .addGap(29, 29, 29)
                .addComponent(BotaoSalvar1)
                .addContainerGap(36, Short.MAX_VALUE))
        );

        jTabbedPane1.addTab("Cadastrar Remédios", cadastroRemedioInterface);

        arquivoMenu.setText("Arquivo");

        logoutButton.setText("Sair");
        logoutButton.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                logoutButtonActionPerformed(evt);
            }
        });
        arquivoMenu.add(logoutButton);

        jMenuBar1.add(arquivoMenu);

        jMenu1.setText("Ajuda");

        sobre.setText("Sobre");
        sobre.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                sobreActionPerformed(evt);
            }
        });
        jMenu1.add(sobre);

        jMenuBar1.add(jMenu1);

        setJMenuBar(jMenuBar1);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.DEFAULT_SIZE, 654, Short.MAX_VALUE)
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(jTabbedPane1, javax.swing.GroupLayout.Alignment.TRAILING, javax.swing.GroupLayout.DEFAULT_SIZE, 519, Short.MAX_VALUE)
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents
    public void initXYK(){
        x = 50;
        y = 50;
        k = 175; 
    }
    
    /*
     Método para verificar se é a hora de tomar o remédio.
     Thread para calcular o horário e chamar a função de comparar a hora,
    pois é preciso fazer isso a cada segundo de execução.
        
    */
    public void compareHour() throws InterruptedException{
        new Thread(){
            @Override
            public void run(){
                int k=1;
                while(true){
                    
                    try {
                        compararHora();
                        sleep(1000);
                        
                    } catch (IOException ex) {
                        Logger.getLogger(PacienteInterface.class.getName()).log(Level.SEVERE, null, ex);
                    } catch (InterruptedException ex) {
                        Logger.getLogger(PacienteInterface.class.getName()).log(Level.SEVERE, null, ex);
                    }
            if(remedio.savedHour==horaAtualMinutos){
                Audio audio = new Audio();
            try {
                audio.playAudio(10, true);
                
               JOptionPane.showMessageDialog(null,"ALARME!!\nALARME!!");
               audio.stopAudio();
                
               compararHora();
               sleep((30)*1000);
               menorDifAtual= 1441;
               //break;
              
                
            } catch (UnsupportedAudioFileException ex) {
                Logger.getLogger(PacienteInterface.class.getName()).log(Level.SEVERE, null, ex);
            } catch (LineUnavailableException ex) {
                Logger.getLogger(PacienteInterface.class.getName()).log(Level.SEVERE, null, ex);
            } catch (IOException ex) {
                Logger.getLogger(PacienteInterface.class.getName()).log(Level.SEVERE, null, ex);
            } catch (InterruptedException ex) {
                Logger.getLogger(PacienteInterface.class.getName()).log(Level.SEVERE, null, ex);
            }           catch (Throwable ex) {
                            Logger.getLogger(PacienteInterface.class.getName()).log(Level.SEVERE, null, ex);
                        }
                    
            }  
            
        }
        //  this.interrupt(); 
          
        }
        
          
       }.start();
      
        
 }
    
    /*
     Método para atualizar a lista de remédios que foi cadastrada para o usuário.
     Utiliza a flag como false para dizer se está escrevendo a primeira vez.
     Utiliza como true para dizer que está atualizando e deve excluir os componentes anteriores.
    */
    
    public void updateRemedy(boolean flag) throws IOException{
        String linha;
        File file = new File("CadastroRemedios/" + nomeUser +".txt");
        if(!file.exists()) file.createNewFile();
        InputStream is = new FileInputStream("CadastroRemedios/" + nomeUser +".txt");
        InputStreamReader isr = new InputStreamReader(is);
        BufferedReader br = new BufferedReader(isr);
        x = 50;
        y = 50;
        k = 175;
         scroll.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
         scroll.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
         scroll.setViewportBorder(BorderFactory.createLoweredBevelBorder());
         scroll.setAutoscrolls(true);
         scroll.setViewportView(jPanel6);
       
         if(flag){
        
             Component comps[] = jPanel6.getComponents(); // retorna todos os componentes do JPanel       
             //System.out.println(comps.length);
             for (int i = 0; i < comps.length; i++) { 
             //    System.out.println(comps.length);
             if (comps[i] instanceof JLabel) {   // verifica se é um JTextField   
               jPanel6.remove(comps[i]);   
          }     
         }     
       }
       
       
        linha = br.readLine();
       
        while ((linha) != null){  
           
            if(linha.equals(nomeUser)){
               
                linha = br.readLine();
                
                if(linha == null) break;
             
                
                JLabel remedio= new JLabel();
                JLabel horario = new JLabel("Nada");
                remedio.setText("Remédio: " +linha);
                remedio.setFont(new Font("Sherif", Font.ITALIC + Font.BOLD, 15));
                //remedio.setFont(new Font("Sherif",, 15));
                jPanel6.add(remedio);
                jPanel6.add(horario);
               
                remedio.setBounds(x, y, 200, 100);
                
                remedio.setVisible(true);
                linha = br.readLine();
                
                if(linha==null) break;
              
                horario.setText("Horário Inicial: " + linha);
                horario.setBounds(x+300, y, 200, 100);
                horario.setVisible(true);
                
                y +=30;
                k += 30;
                
                jPanel6.setPreferredSize(new Dimension(0,k));
 
                JLabel dias = new JLabel();
                jPanel6.add(dias);
                dias.setText("Dias da Semana:");
                dias.setBounds(x, y, 200, 100);
                y +=30;
                k += 30;
                jPanel6.setPreferredSize(new Dimension(0,k));
 
                linha = br.readLine();
                
                if(linha==null) break;
                JLabel interval = new JLabel();
                jPanel6.add(interval);
                
                interval.setText("Intervalo: " + linha);
                interval.setBounds(x+300, y-30, 200, 100);
                interval.setVisible(true);
                
                
               do{
                    linha = br.readLine();
                    if(linha == null || linha.equals(nomeUser)) break;
                 
                    
                    if(Integer.parseInt(linha) == 2)linha = "Segunda-Feira";
                    else if(Integer.parseInt(linha) == 3) linha = "Terça-Feira";
                    else if(Integer.parseInt(linha) == 4) linha = "Quarta-Feira";
                    else if(Integer.parseInt(linha) == 5) linha = "Quinta-Feira";
                    else if(Integer.parseInt(linha) == 6) linha = "Sexta-Feira";
                    else linha = "Sábado";
                    
                    JLabel remedio2= new JLabel(linha);
                     
                    jPanel6.add(remedio2);
                     remedio2.setBounds(x+125, y,400, 100);
                     remedio2.setVisible(true);
                     //remedio2.setFont(font);
                     y += 30;
                     
                     k += 30;
                     
                    jPanel6.setPreferredSize(new Dimension(0,k));
                     
                     
                }while(true);
                y+=30;
                k+=30;
                if(linha == null) break;
 
           }
 
        }
        is.close();
        isr.close();
        br.close();
       // String ok = horarioRemedio1.getText();
    }
    /*
        Atualiza a lista de remédios do usuário.
    */
    private void atualizarListaDeRemediosActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_atualizarListaDeRemediosActionPerformed
        try {
            updateRemedy(true);
        } catch (IOException ex) {
            Logger.getLogger(PacienteInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_atualizarListaDeRemediosActionPerformed
    /**
        Volta para a tela de Login.
    */
    private void logoutButtonActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_logoutButtonActionPerformed
        jTabbedPane1.setVisible(false);
        getParent().remove(jTabbedPane1);
        getParent().setVisible(false);
        getParent().getParent().add(new LoginInterface());
       
    }//GEN-LAST:event_logoutButtonActionPerformed
    /**
        Exibe os produtores & desenvolvedores do programa.
    */
    private void sobreActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_sobreActionPerformed
        JOptionPane.showMessageDialog(null, "\t\tLEMBRÉDIO\t\t\n\tDesenvolvedores:\nMatheus Brito\nRafael Alessandro\n");
    }//GEN-LAST:event_sobreActionPerformed

    private void okButtonSearchActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_okButtonSearchActionPerformed
        try {
            search(true, pesquisaText.getText());
        } catch (IOException ex) {
            Logger.getLogger(PacienteInterface.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_okButtonSearchActionPerformed

    private void horarioRemedio1RemedioActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_horarioRemedio1RemedioActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_horarioRemedio1RemedioActionPerformed

    private void BotaoSalvar1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_BotaoSalvar1ActionPerformed
        File diretorio = new File("CadastroRemedios");
        if(!diretorio.exists()) diretorio.mkdir();
        File Remedios = new File(diretorio,nomeUser + ".txt");
        String ok = (horarioRemedio1.getText());
        String horas[] = new String[2];
        horas = ok.split(Pattern.quote(":"));
        if(Integer.parseInt(horas[0]) > 24 || Integer.parseInt(horas[0]) < 0 && Integer.parseInt(horas[1]) < 0 || Integer.parseInt(horas[1]) > 59){
            JOptionPane.showMessageDialog(null,"Horario inválido!!");
            System.out.println("Horas "+horas[0]+"minutos "+horas[1]);
        }
        else{
            try {
                FileWriter fw = new FileWriter(Remedios, true);
                if(nomeRemedio1.getText().length() > 0 && CheckDomingo1.isSelected()||CheckSegunda1.isSelected()||CheckTerça1.isSelected()||CheckQuarta1.isSelected()||CheckQuinta1.isSelected()||CheckSexta1.isSelected()||CheckSabado1.isSelected()||CheckTDS1.isSelected()){
                    fw.write(nomeUser);
                    fw.write("\r\n");
                    fw.write(nomeRemedio1.getText());
                    fw.write("\r\n");

                    fw.write(ok);
                    fw.write("\r\n");
                    fw.write(jComboBox21.getSelectedItem().toString());
                    fw.write("\r\n");
                    if(CheckDomingo1.isSelected()){
                        fw.write("1");
                        fw.write("\r\n");
                    }
                    if(CheckSegunda1.isSelected()){
                        fw.write("2");
                        fw.write("\r\n");
                    }
                    if(CheckTerça1.isSelected()){
                        fw.write("3");
                        fw.write("\r\n");
                    }
                    if(CheckQuarta1.isSelected()){
                        fw.write("4");
                        fw.write("\r\n");
                    }
                    if(CheckQuinta1.isSelected()){
                        fw.write("5");
                        fw.write("\r\n");
                    }
                    if(CheckSexta1.isSelected()){
                        fw.write("6");
                        fw.write("\r\n");
                    }
                    if(CheckSabado1.isSelected()){
                        fw.write("7");
                        fw.write("\r\n");
                    }
                    if(CheckTDS1.isSelected()){
                        fw.write("1");
                        fw.write("\r\n");
                        fw.write("2");
                        fw.write("\r\n");
                        fw.write("3");
                        fw.write("\r\n");
                        fw.write("4");
                        fw.write("\r\n");
                        fw.write("5");
                        fw.write("\r\n");
                        fw.write("6");
                        fw.write("\r\n");
                        fw.write("7");
                        fw.write("\r\n");

                    }
                    JOptionPane.showMessageDialog(null,"Remédio Cadastrado com sucesso!");

                    nomeRemedio1.setText("");
                    horarioRemedio1.setText("");
                    CheckDomingo1.setSelected(false);
                    CheckDomingo1.setSelected(false);
                    CheckTerça1.setSelected(false);
                    CheckQuarta1.setSelected(false);
                    CheckQuinta1.setSelected(false);
                    CheckSexta1.setSelected(false);
                    CheckSabado1.setSelected(false);
                    CheckTDS1.setSelected(false);

                }
                else{
                    JOptionPane.showMessageDialog(null,"Preencha todos os dados");
                }
                fw.flush();
                fw.close();

            } catch (IOException ex) {
                Logger.getLogger(PacienteInterface.class.getName()).log(Level.SEVERE, null, ex);
            }

        }
    }//GEN-LAST:event_BotaoSalvar1ActionPerformed
    /*
        Retorna, depois de muito custo, a menor hora utilizando os valores lidos do arquivo como
    'Intervalo de horas' & Hora Inicial. Não se engane, esta implementação não foi nada fácil.
    */
    public void compararHora() throws FileNotFoundException, IOException, InterruptedException{
        File file = new File("CadastroRemedios/" + nomeUser +".txt");
        if(!file.exists()) file.createNewFile();
        InputStream is = new FileInputStream("CadastroRemedios/" + nomeUser +".txt");
        InputStreamReader isr = new InputStreamReader(is);
        BufferedReader br = new BufferedReader(isr);
        
        SimpleDateFormat sdf = new SimpleDateFormat("HH");
        Date hora = Calendar.getInstance().getTime(); // Ou qualquer outra forma que tem
        String dataFormatada = sdf.format(hora);
        horaAtualMinutos = Integer.parseInt(dataFormatada)*60;
        
        SimpleDateFormat sdf2 = new SimpleDateFormat("mm");
        hora = Calendar.getInstance().getTime(); // Ou qualquer outra forma que tem
        dataFormatada = sdf2.format(hora);
        horaAtualMinutos += Integer.parseInt(dataFormatada);
        
         String linha = br.readLine();
        
         if(linha == null){
            remedio.nomeRemedio = "NÃO HÁ REMÉDIO CADASTRADO";
            remedio.remainingTime = -1;
        
        }
        while ((linha) != null){  
           
            if(linha.equals(nomeUser)){
               
                linha = br.readLine();
                //if(linha == remedio.nomeRemedio)continue;
                String remedioName = linha;
                
                int minutosRemedio;
                linha = br.readLine();
                
                if(linha == null) break;
                String ok = (linha);
                String horas[] = new String[2];
                horas = ok.split(Pattern.quote(":"));
                
                minutosRemedio = Integer.parseInt(horas[0])*60 + Integer.parseInt(horas[1]);
                
                linha = br.readLine();
                
                String intervalo[] = new String[1];
                intervalo = linha.split(" ");
                int interval = Integer.parseInt(intervalo[0]);
                if(interval == 1) interval = 24;
                
                for(int i=0; i < 24/interval; i++){
                    
                        //System.out.println(minutosRemedio);
                        switch(interval){
                            case 4:
                                minutosRemedio += 4*60;
                                break;
                            case 6:
                                
                                minutosRemedio += 6*60;
                                
                                break;
                            case 8:
                                
                                minutosRemedio += 8*60;
                                
                                break;
                            case 12:
                                
                                minutosRemedio += 12*60;
                                
                                break;
                            default:
                                break;
                        
                        
                        }
                        
                        if(minutosRemedio > 1440){
                            minutosRemedio = minutosRemedio%1440;
                        
                        }
                        
                        if(minutosRemedio-horaAtualMinutos >= 0 ){
                                if(minutosRemedio-horaAtualMinutos < menorDifAtual){
                                    menorDifAtual = minutosRemedio-horaAtualMinutos;
                                    remedio.nomeRemedio = remedioName;
                                    remedio.remainingTime = menorDifAtual;
                                    remedio.savedHour = minutosRemedio;
                                }
                            }
                    
                }
                
                linha = br.readLine();
                
                if(linha==null) break;
              
                
               do{
                    linha = br.readLine();
                    if(linha == null || linha.equals(nomeUser)) break;
      
                }while(true);
             
                if(linha == null) break;
 
           }
 
        }
        is.close();
        isr.close();
        br.close();
        
        nomeAlarme.setText(remedio.nomeRemedio);
        
        if(remedio.remainingTime>60){
            
            remainingTime.setText(remedio.remainingTime/60+ "h e " + remedio.remainingTime%60+"m");
            remainingTime.repaint();
        }
        else if(remedio.remainingTime >=0 && remedio.remainingTime < 60){
            remainingTime.setText(""+remedio.remainingTime+"m");
        }
        else remainingTime.setText("--");
        
        if(horaAtualMinutos>60){
            horaAtual.setText(horaAtualMinutos/60+ "h e " + horaAtualMinutos%60+"m");
            
        }
        else
        horaAtual.setText(""+horaAtualMinutos+"m");
        
        nomeAlarme.repaint();
        remainingTime.repaint();
        horaAtual.repaint();
       
    }
    
    public LinkedList<String> retornarListaDeFarmacias() throws IOException{
        String linha;
        LinkedList<String> farmacias = new LinkedList(); 
        File file = new File("FarmaciasCadastradas.txt");
        if(!file.exists()) file.createNewFile();
        InputStream is = new FileInputStream("FarmaciasCadastradas.txt");
        InputStreamReader isr = new InputStreamReader(is);
        BufferedReader br = new BufferedReader(isr);
        
        do{
            linha = br.readLine();
            if(linha != null) farmacias.add(linha);
        }while(linha != null);
        is.close();
        isr.close();
        br.close();
        return farmacias;
    
    }
    /**
     * Procura os Remédios nas farmácias cadastradas.
     */
    public void search(boolean flag, String pesquisa) throws FileNotFoundException, IOException{
        String linha;
        LinkedList<String> farmacias = retornarListaDeFarmacias();
        
        x = 50;
        y = 50;
        k = 175;
         scroll2.setVerticalScrollBarPolicy(JScrollPane.VERTICAL_SCROLLBAR_AS_NEEDED);
         scroll2.setHorizontalScrollBarPolicy(JScrollPane.HORIZONTAL_SCROLLBAR_AS_NEEDED);
         scroll2.setViewportBorder(BorderFactory.createLoweredBevelBorder());
         scroll2.setAutoscrolls(true);
         scroll2.setViewportView(jPanel3);
        
         if(flag){
        
             Component comps[] = jPanel3.getComponents(); // retorna todos os componentes do JPanel       
             //System.out.println(comps.length);
             for (int i = 0; i < comps.length; i++) { 
             //    System.out.println(comps.length);
             if (comps[i] instanceof JLabel) {   // verifica se é um JTextField   
               jPanel3.remove(comps[i]);   
          }     
         }     
       }
       
       
      
        for(int i=0; i < farmacias.size(); i++){  
            linha = farmacias.get(i);
            System.out.println(linha);
            File file = new File("EstoqueFarmacias/"+linha+".txt");
            if(!file.exists()) file.createNewFile();
            InputStream is = new FileInputStream("EstoqueFarmacias/"+linha+".txt");
            InputStreamReader isr = new InputStreamReader(is);
            BufferedReader br = new BufferedReader(isr);
            
            do{
                System.out.println("AQUI1");
                linha = br.readLine();
                System.out.println(linha + " AQUI");
                if(linha == null) break;
                System.out.println(linha + "  " + pesquisa);
                if(linha.equals(pesquisa)){
                    JLabel farmacia = new JLabel();
                    jPanel3.add(farmacia);
                    farmacia.setText(farmacias.get(i));
                    farmacia.setFont(new Font("Sherif", Font.BOLD, 30));
                    farmacia.setBounds(x, y, 1000, 100);
                    y +=50;
                    k += 50;

                    jPanel3.setPreferredSize(new Dimension(0,k));
                    
                    JLabel remedio= new JLabel();
                    JLabel preco = new JLabel("Nada");
                    JLabel quantidade = new JLabel("0");
                    remedio.setText("Remédio: " +linha);
                    remedio.setFont(new Font("Sherif", Font.ITALIC + Font.BOLD, 15));
                    jPanel3.add(remedio);
                    jPanel3.add(preco);
                    jPanel3.add(quantidade);
                    remedio.setBounds(x, y, 1000, 100);

                    remedio.setVisible(true);
                    linha = br.readLine();
                   
                    if(linha==null) break;

                    quantidade.setText("Quantidade: " + linha);
                    quantidade.setBounds(x+300, y, 200, 100);
                    quantidade.setVisible(true);

                    y +=50;
                    k += 50;

                    jPanel3.setPreferredSize(new Dimension(0,k));

                    linha = br.readLine();

                    if(linha==null) break;

                    preco.setText("Preço: " + linha);
                    preco.setBounds(x+300, y-30, 200, 100);
                    preco.setVisible(true);

                    y+=30;
                    k+=30;
                    jPanel3.setPreferredSize(new Dimension(0,k));

                    if(linha == null) break;

                    break;
             }else for(int b=0; b < 2; b++) br.readLine();
                
           }while(true);
            is.close();
            isr.close();
            br.close();
        
        }        
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton BotaoSalvar1;
    private javax.swing.JCheckBox CheckDomingo1;
    private javax.swing.JCheckBox CheckQuarta1;
    private javax.swing.JCheckBox CheckQuinta1;
    private javax.swing.JCheckBox CheckSabado1;
    private javax.swing.JCheckBox CheckSegunda1;
    private javax.swing.JCheckBox CheckSexta1;
    private javax.swing.JCheckBox CheckTDS1;
    private javax.swing.JCheckBox CheckTerça1;
    private javax.swing.JMenu arquivoMenu;
    private javax.swing.JButton atualizarListaDeRemedios;
    private javax.swing.JPanel cadastroRemedioInterface;
    private javax.swing.JLabel horaAtual;
    private javax.swing.JFormattedTextField horarioRemedio1;
    private javax.swing.JComboBox<String> jComboBox21;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel14;
    private javax.swing.JLabel jLabel15;
    private javax.swing.JLabel jLabel16;
    private javax.swing.JLabel jLabel17;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JLabel jLabel2NP;
    private javax.swing.JLabel jLabel3;
    private javax.swing.JLabel jLabel4;
    private javax.swing.JMenu jMenu1;
    private javax.swing.JMenuBar jMenuBar1;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JPanel jPanel3;
    private javax.swing.JPanel jPanel4;
    private javax.swing.JPanel jPanel5;
    private javax.swing.JPanel jPanel6;
    private javax.swing.JTabbedPane jTabbedPane1;
    private javax.swing.JMenuItem logoutButton;
    private javax.swing.JLabel nomeAlarme;
    private javax.swing.JTextField nomeRemedio1;
    private javax.swing.JButton okButtonSearch;
    private javax.swing.JTextField pesquisaText;
    private javax.swing.JLabel remainingTime;
    private javax.swing.JScrollPane scroll;
    private javax.swing.JScrollPane scroll2;
    private javax.swing.JMenuItem sobre;
    // End of variables declaration//GEN-END:variables

  
}
